name: CD

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, ubuntu-24.04, ubuntu-22.04, macos-latest ]
        architecture: [ x86_64, aarch64, armv7 ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Get version
        id: get_version
        run: echo "version=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT

      - name: Restore cargo cache
        uses: Swatinem/rust-cache@v2
        env:
          cache-name: ci
        with:
          shared-key: ${{ matrix.os }}-${{ env.cache-name }}-stable

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Build
        if: matrix.os != 'ubuntu-22.04'
        run: cargo build
      - name: Run tests
        if: matrix.os != 'ubuntu-22.04'
        run: cargo test --workspace
      - name: Run clippy
        if: matrix.os != 'ubuntu-22.04'
        run: |
          cargo clean
          cargo clippy --workspace --all-features

      - name: Setup ARM toolchain
        if: matrix.architecture != 'x86_64'
        run: |
          rustup target add aarch64-unknown-linux-gnu
          rustup target add armv7-unknown-linux-gnueabihf
          rustup target add arm-unknown-linux-gnueabihf

          curl -o $GITHUB_WORKSPACE/aarch64.tar.xz https://armkeil.blob.core.windows.net/developer/Files/downloads/gnu-a/8.2-2018.08/gcc-arm-8.2-2018.08-x86_64-aarch64-linux-gnu.tar.xz
          curl -o $GITHUB_WORKSPACE/arm.tar.xz https://armkeil.blob.core.windows.net/developer/Files/downloads/gnu-a/8.2-2018.08/gcc-arm-8.2-2018.08-x86_64-arm-linux-gnueabihf.tar.xz

          tar xf $GITHUB_WORKSPACE/aarch64.tar.xz
          tar xf $GITHUB_WORKSPACE/arm.tar.xz

          echo "$GITHUB_WORKSPACE/gcc-arm-8.2-2018.08-x86_64-aarch64-linux-gnu/bin" >> $GITHUB_PATH
          echo "$GITHUB_WORKSPACE/gcc-arm-8.2-2018.08-x86_64-arm-linux-gnueabihf/bin" >> $GITHUB_PATH

      - name: Build Release
        run: |
          cargo build --release --locked

          mkdir -p release
          ls -q target/release/hostshook target/release/libhostshook.dylib target/release/libhostshook.so 2>/dev/null | xargs echo
          ls -q target/release/hostshook target/release/libhostshook.dylib target/release/libhostshook.so 2>/dev/null | xargs tar -zcvf release/hostshook-${{ matrix.os }}-${{ matrix.architecture }}.tar.gz

      - name: Set SHA
        if: matrix.os == 'macos-latest'
        id: shasum
        run: |
          echo sha="$(shasum -a 256 ./release/hostshook-${{ matrix.os }}-${{ matrix.architecture }}.tar.gz | awk '{printf $1}')" >> $GITHUB_OUTPUT

      - name: Extract release notes
        if: matrix.os == 'ubuntu-latest'
        id: release_notes
        uses: ffurrer2/extract-release-notes@v2

      - name: Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: ${{ steps.release_notes.outputs.release_notes }}
          prerelease: ${{ contains(github.ref, '-') }}
          files: |
            ./release/*.tar.gz
            ./release/*.zip

      - name: Update Homebrew formula
        uses: mislav/bump-homebrew-formula-action@v3
        if: contains(github.ref, 'refs/tags/')
        with:
          formula-name: hostshook
          homebrew-tap: powerumc/homebrew-tap
          download-url: https://github.com/powerumc/hosts-hook/archive/${{ github.ref_name }}.tar.gz
        env:
          COMMITTER_TOKEN: ${{ secrets.HOMEBREW_TAP_TOKEN }}